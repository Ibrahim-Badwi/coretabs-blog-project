{"version":3,"sources":["components/Navigation.jsx","components/Header.jsx","assets/library.jpg","components/Blog.jsx","components/BlogsGrid.jsx","components/BlogsBar.jsx","services/blogs.js","components/Content.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Header","Meta","meta","margin","marginRight","icon","faClock","style","Date","published","toLocaleDateString","year","month","day","faFolder","tags","faCoffee","readingTime","Blog","blog","src","img","alt","title","content","slice","BlogsGrid","blogs","map","BlogsSidebar","latest","placeholder","baseUrl","axios","get","then","response","data","Content","useState","setBlogs","useEffect","blogsService","initialBlogs","BlogsBar","Footer","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.65276de1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Coretabs Blog\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        <span className=\"menu\">Menu</span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a\r\n              className=\"nav-link dropdown-toggle\"\r\n              href=\"/\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              role=\"button\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Categories\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a className=\"dropdown-item\" href=\"/\">\r\n                React\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"/\">\r\n                React Native\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"/\">\r\n                Django\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"/\">\r\n                Node.js\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              Contacts\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              About\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header bg-light d-none d-md-block\">Recent posts</div>\r\n  );\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/library.4e526a96.jpg\";","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faClock, faFolder } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport img from '../assets/library.jpg';\r\n\r\nconst Meta = ({ meta }) => {\r\n\r\n  const formatDate = () => {\r\n    let date = new Date(meta.published);\r\n    let formatedDate = date.toLocaleDateString('En', { year: 'numeric', month: 'short', day: 'numeric' });\r\n\r\n    return formatedDate;\r\n  };\r\n\r\n  const margin = { marginRight: '4px' };\r\n\r\n  return (\r\n    <ul className=\"blog-meta\">\r\n      <li className=\"meta-item\">\r\n        <FontAwesomeIcon icon={faClock} style={margin}/>\r\n        {formatDate()}\r\n      </li>\r\n      <li className=\"meta-item\">\r\n        <FontAwesomeIcon icon={faFolder} style={margin}/>\r\n        {meta.tags}\r\n      </li>\r\n      <li className=\"meta-item\">\r\n        <FontAwesomeIcon icon={faCoffee} style={margin}/>\r\n        {`${meta.readingTime} min(s) read`}\r\n      </li>\r\n      {/* October 4, 2020 International 2 min(s) read */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Blog = ({ blog }) => {\r\n  return (\r\n    // <article className=\"blog col-lg-6 col-md-4 col-sm-6 col-xs-12 mr-auto\">\r\n    <article className=\"blog col-lg-5 col-md-5 col-sm-5 col-xs-10 mx-auto\">\r\n      <img src={img} alt={blog.title} />\r\n      <div className=\"content\">\r\n        <h4 className=\"blog-title\">{blog.title}</h4>\r\n        <Meta meta={blog.meta} />\r\n        <p>{blog.content.slice(0, 150)}</p>\r\n        <a href=\"/\">continue reading</a>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\n\r\nimport Blog from './Blog';\r\n\r\nconst BlogsGrid = ({ blogs }) => {\r\n  return (\r\n    <div className=\"col-lg-9\">\r\n      <div className=\"row\">\r\n        {blogs.map(blog => <Blog key={blog.id} blog={blog} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogsGrid;","import React from 'react';\r\n\r\nconst BlogsSidebar = ({ latest }) => {\r\n  return (\r\n    <div className=\"d-none d-lg-block col-lg-3 col-blogs-sidebar\">\r\n      <div className=\"blogs-sidebar\">\r\n        <input type=\"text\" placeholder=\"Search...\" />\r\n        <h4 className=\"box-title\">Recent Blogs</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {latest.map(blog => <li key={blog.id} className=\"list-group-item\">{blog.title}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogsSidebar;","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/blogs';\r\n\r\nconst get = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  // return axios.get(baseUrl);\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default { get, getAll };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport BlogsGrid from './BlogsGrid';\r\nimport BlogsBar from './BlogsBar';\r\n\r\nimport blogsService from '../services/blogs';\r\n\r\nconst Content = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n\r\n  const hook = () => {\r\n    blogsService\r\n      .getAll()\r\n      .then(initialBlogs => {\r\n        setBlogs(initialBlogs);\r\n      });\r\n    // blogsService\r\n    //   .getAll()\r\n    //   .then(response => {\r\n    //     setBlogs(response.data);\r\n    //   });\r\n  };\r\n\r\n  useEffect(hook, []);\r\n  return (\r\n    <div className=\"container-lg mt-5\">\r\n      <Switch>\r\n        <div className=\"row\">\r\n          <BlogsGrid blogs={blogs} />\r\n          <BlogsBar latest={blogs} />\r\n        </div>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer container-fluid\">\r\n      <div className=\"container-lg\">\r\n        <div className=\"row\">\r\n          <div className=\"footer-box col-12 col-md-6 col-lg-4\">\r\n            <h4 className=\"box-title\">Coretabs Blog</h4>\r\n            <p className=\"box-content\">\r\n              The goal of this blog is to share and document my learning juerney\r\n            </p>\r\n          </div>\r\n          <div className=\"debuga footer-box col-12 col-md-6 col-lg-4\">\r\n            <h4 className=\"box-title\">Categories</h4>\r\n            <ul className=\"list-group list-group-flush box-content\">\r\n              <li className=\"list-group-item\">React</li>\r\n              <li className=\"list-group-item\">React Native</li>\r\n              <li className=\"list-group-item\">Django</li>\r\n              <li className=\"list-group-item\">Node.js</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"debuga footer-box col-12 col-md-6 col-lg-4\">\r\n            <h4 className=\"box-title\">Pages</h4>\r\n            <ul className=\"list-group list-group-flush box-content\">\r\n              <li className=\"list-group-item\">Home</li>\r\n              <li className=\"list-group-item\">Categories</li>\r\n              <li className=\"list-group-item\">Contacts</li>\r\n              <li className=\"list-group-item\">About</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"footer-box copy\">build by &copy; <a href=\"https://twitter.com/Ibrahim_Badwi0\" target=\"_blank\" rel=\"noopener noreferrer\">Ibrahim Badwi</a></p>\r\n\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\r\n\r\nimport InfoBar from './components/InforBar';\r\nimport Navigation from './components/Navigation';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport Footer from './components/Footer';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    {' '}\r\n    <h2>TKTL notes app</h2>{' '}\r\n  </div>\r\n);\r\n\r\nconst Notes = () => (\r\n  <div>\r\n    {' '}\r\n    <h2>Notes</h2>{' '}\r\n  </div>\r\n);\r\n\r\nconst Users = () => (\r\n  <div>\r\n    {' '}\r\n    <h2>Users</h2>{' '}\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"container-lg debug\">\r\n        {/* <InfoBar /> */}\r\n        <Navigation />\r\n        <Header />\r\n        <Content />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App2() {\r\n  const padding = {\r\n    padding: 5,\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <div>\r\n          <Link style={padding} to=\"/\">\r\n            home\r\n          </Link>\r\n          <Link style={padding} to=\"/notes\">\r\n            notes\r\n          </Link>\r\n          <Link style={padding} to=\"/users\">\r\n            users\r\n          </Link>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/notes\">\r\n            <Notes />\r\n            {console.log('ok')}\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n            {console.log('ok')}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n            {console.log('ok')}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport './custom.scss';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}